@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}



<div class="row">

    <h1>Welcome to NightscoutShareServer</h1>
    <p>This is a custom server that behaves like a Dexcom Share server, but will fetch its glucose values from nightscout</p>
    <p>If you're a nightscout user, you may have heared of the "Dexcom Bridge". This server does the reverse.</p>
    <p>
        By using this custom shareserver, you can use any CGM together with Loop, as long as your cgm data is uploaded to nightscout.
        A consequence is that you don't have to store your glucose data on Dexcom's servers
    </p>

    <h2>Step 0 a): check integration against nightscout</h2>
    <p>
        Please verify that the integration against nightscout is working, click this button
    </p>
    <button id="loadglucose" value="Load Glucose">Load glucose</button>
    <button id="hideglucose" value="Hide glucose" style="visibility:hidden">Hide glucose</button>
    <div id="glucoseinfo">

    </div>
    <h2>Step 0 b): Check Version of Loop. You must be running Loop 1.4.0 or later</h2>
    <p>
        In Loop 1.4.0 there were many changes to make selecting shareserver much easier
    </p>

    <h2>Step1: shareserver location</h2>
    <p>
        Take a note of this address: @Microsoft.AspNetCore.Http.Extensions.UriHelper.GetDisplayUrl(Request)
        This is the address to your custom shareserver.
    </p>

    <h2>Step 2: Add cusomt shareserver to Loop</h2>
    <p>
        Open the Loop project directory and navigate to Loop/Models/ServiceAuthentication/ShareService.swift .
        There are comments inside this file describing how to add a new shareserver. Please search the Loop code (cmd+f) for customServer and follow the instructions. Note that customServer variable should be set to the location you wrote down in step 1.

    </p>

    <p>
        Recompile the Loop app, and you're all set to go!
        Your customserver should now be build and running, trit it out! It will accept any combination of username and password.
    </p>
</div>
@section Scripts {
<script>
        var url = "@Url.Action("Get","Glucose")";
        //nightscoutSite is unused here but included just so you can verify that the environment setting worked
        var nightscoutSite = "@NightscoutShareServer.Utils.Config.Instance.NsHost";

        var enableMockedMode = "@NightscoutShareServer.Utils.Config.Instance.EnableMockedGlucoseMode" === "True";
        var $loadglucose = $("#loadglucose"),
            $glucoseinfo = $("#glucoseinfo"),
            $hideglucose = $("#hideglucose");

        $hideglucose.click(function () {
            $glucoseinfo.find("table").remove();

        });
        Number.prototype.round = function (places) {
            return +(Math.round(this + "e+" + places) + "e-" + places);
        }

        function manipulateResponse(data) {
            for (var key in data) {
                if (data.hasOwnProperty(key)) {
                    var mgdl = data[key].Value;
                    var mmol = (mgdl / 18).round(1);
                    delete data[key].Value;
                    data[key]["Value (mgdl)"] = mgdl;
                    data[key]["Value (mmol)"] = mmol;

                    var wt=new Date(parseInt(data[key].WT.substr(6)));
                    if(!isNaN(wt.getTime())) {
                        data[key]["Locale DateTime"] = wt.toLocaleString();
                    }
                }
            }
            return data;
        }

        $loadglucose.click(function () {
            $.ajax({
                url: url,
                dataType: 'json',
                success: function (data) {
                    $glucoseinfo.find("table").remove();
                    var pretty = prettyPrint(manipulateResponse(data), { maxDepth: 5 })
                    $glucoseinfo.append(pretty);
                    $hideglucose.css("visibility", "visible")
                    enableMockedMode && alert("These data are mocked (don't trust them)!");
                },
                error: function (data, status, error) {
                    alert("Could not retrieve glucose data, please verify your nightscout url:  " + status + ", " + error);
                }
            });
        });
</script>
}

